TODO:

If I log in as an employer, I should be able to see all my jobs and applications.

Need to make the company associated with a user.

A user should have 2 types, candidate, employer.
Multiple employer users can be associated to a company.

Should be able to see my own applications
  Create a page and router
  When loading the page, fetch the applications and then populate
  Need to build the backend for it.
Companies should be related to multiple admins

Figure out how to add index.
Figure out how to use model validation.

Build the way to receive success of building an application.

We should be able to tell the current user has applied to the job and thus disable the application form.

How to build a json application object for sending to the backend?

1, Build a few new application
2, Show them by calling index or show

1, The button should send a request to the backend.
2, It should create an application to the job.
3, What should it show on the frontend?
4, User should be able to view his applications.
5, Employers should be able to move forward with the application.
6, Applications should be separated in to stages.

Need to visualize things.
1, Click.
  First try using mapDispatchToProps
  Get a function like creatApplication and link it to the view.
2, Send.
3, Backend creates a application.

How do we create an application?
1, Need to work on the route.
  Need to figure out how to do nested route, a route whose params include jobs and application.
2, Use the authenticated user.
Try the nested resource way first.

How to represent which stage it is at?
I should stop thinking about this question for now. There are actually many ways to do. Don't waste time on it now.

Need to fix this problem: after signup, and maybe login, it doesn't redirect. For this, first finish log out. As I can't log out now.

I should display the position.
Little step:

Why do we need to do selectCompany?

Practice:
How to add a link?
import { Link } from 'react-router-dom';
<Link to={'/jobs/' + job.id}>{job.position}</Link>

<Route exact path="/jobs/:jobId" component={JobShowContainer} />
